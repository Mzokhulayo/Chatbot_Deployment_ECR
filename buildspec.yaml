version: 0.2

env:
  variables:
    REPOSITORY_URI: "343218211265.dkr.ecr.us-east-1.amazonaws.com/springboot/chatbot2"  # Replace this or define in Terraform
    IMAGE_TAG: "latest"  # Modify as needed

phases:
  install:
    runtime-versions:
      java: 23  # Specify Java version if needed
    commands:
      - echo Changing to the project directory...
      - cd chatbot
      - echo Installing dependencies...
      - mvn clean install  # This will compile the code and create the JAR file
  pre_build:
    commands:
      - cd ..
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - echo Logged in successfully!
      - REPOSITORY_NAME=$(echo $REPOSITORY_URI | cut -d '/' -f 2)

      - echo Logging in to Docker Hub...
#      - echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
      - echo aU_sUdMD29uRH-_ | docker login --username nkulumdubeki2017 --password-stdin

#      - REPOSITORY_NAME=chatbot-repo
#      - IMAGE_TAG=latest
#      - docker build -t $REPOSITORY_NAME .
#      - docker tag $REPOSITORY_NAME:latest $REPOSITORY_URI:$IMAGE_TAG

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
#      - docker build -t $REPOSITORY_URI:latest .
      - docker build -t $REPOSITORY_NAME .
#      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $REPOSITORY_NAME:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image to ECR...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - DOCKER_CONTAINER_NAME=springboot/chatbot2
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    -imagedefinitions.json
    -target/chatbot.jar

#      - echo Build completed on `date`
#      - echo Pushing the Docker images...
#      - docker push $REPOSITORY_URI:latest
#      - docker push $REPOSITORY_URI:$IMAGE_TAG



#version: 0.2
#
#phases:
#  pre_build:
#    commands:
#      - echo Logging in to Amazon ECR...
##      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com
#      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
#      - IMAGE_TAG=latest
#  build:
#    commands:
#      - echo Build started on `date`
#      - echo Building the Docker image...
#      - docker build -t ${REPOSITORY_URI}:${IMAGE_TAG} .
#      - docker tag ${REPOSITORY_URI}:${IMAGE_TAG} ${REPOSITORY_URI}:${IMAGE_TAG}
#  post_build:
#    commands:
#      - echo Build completed on `date`
#      - echo Pushing the Docker image to ECR...
#      - docker push ${REPOSITORY_URI}:${IMAGE_TAG}
#      - echo Writing imagedefinitions.json file...
#      - printf '[{"name":"chatbot-app-container","imageUri":"%s"}]' ${REPOSITORY_URI}:${IMAGE_TAG} > imagedefinitions.json
#artifacts:
#  files:
#    - imagedefinitions.json
